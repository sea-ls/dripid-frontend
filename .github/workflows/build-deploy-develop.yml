name: Build and Deploy develop

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'
env:
  CI_PROJECT_NAME: "${{ github.event.repository.name }}"
  CI_REGISTRY: "ghcr.io"
  DOCKER_REPO_PASSWORD: "${{ secrets.DOCKER_REPO_PASSWORD }}"
  DOCKER_REPO_URL: "${{ vars.DOCKER_REPO_URL }}"
  DOCKER_REPO_URL_LOGIN: "${{ vars.DOCKER_REPO_URL_LOGIN }}"
  DOCKER_REPO_USERNAME: "${{ secrets.DOCKER_REPO_USERNAME }}"
  CONFIG_TOKEN: "${{ secrets.CONFIG_TOKEN }}"

jobs:
  build-image:
    runs-on:
      - self-hosted
    steps:
      - uses: "actions/checkout@v3"
      - run: "echo $DOCKER_REPO_PASSWORD | docker login $DOCKER_REPO_URL_LOGIN -u $DOCKER_REPO_USERNAME --password-stdin"
      - run: "[[ -n \"${GITHUB_REF_NAME}\" ]] && echo \"IMAGE=dripid/frontend:${GITHUB_REF_NAME}\" >> $GITHUB_ENV || echo \"IMAGE=dripid/frontend:${GITHUB_HEAD_REF}-${GITHUB_BASE_REF}\" >> $GITHUB_ENV"
      - run: "docker build -t $IMAGE ."
      - run: "docker tag dripid/frontend:${GITHUB_REF_NAME} $DOCKER_REPO_URL$CI_PROJECT_NAME/frontend:${GITHUB_REF_NAME}"
      - run: "docker push $DOCKER_REPO_URL$CI_PROJECT_NAME/frontend:${GITHUB_REF_NAME}"
  deploy-image:
    runs-on:
      - develop
    needs:
      - build-image
    steps:
      - uses: "actions/checkout@v3"
      - run: |
          pwd
          cd docker
          pwd
          echo $DOCKER_REPO_PASSWORD | docker login $DOCKER_REPO_URL_LOGIN -u $DOCKER_REPO_USERNAME --password-stdin
          echo $DOCKER_REPO_URL
          cat docker-compose.yaml-links.yml docker-compose.frontend.yml > docker-compose.frontend.gen.yml
          env $(cat ./env/$CI_COMMIT_BRANCH/.env | grep ^[A-Z] | xargs) docker --context $CI_COMMIT_BRANCH stack deploy -c docker-compose.frontend.gen.yml --with-registry-auth dripid-frontend